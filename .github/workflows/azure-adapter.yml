name: Azure Adapter Build and Package

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/Asynkron.DurableFunctions.AzureAdapter/**'
      - '.github/workflows/azure-adapter.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/Asynkron.DurableFunctions.AzureAdapter/**'
      - '.github/workflows/azure-adapter.yml'
  workflow_dispatch:

jobs:
  build-azure-adapter:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore AzureAdapter dependencies
      run: dotnet restore src/Asynkron.DurableFunctions.AzureAdapter
      
    - name: Build AzureAdapter (Debug)
      run: dotnet build src/Asynkron.DurableFunctions.AzureAdapter --configuration Debug --no-restore
      
    - name: Build AzureAdapter (Release)
      run: dotnet build src/Asynkron.DurableFunctions.AzureAdapter --configuration Release --no-restore
      
    - name: Generate XML documentation
      run: |
        echo "Checking XML documentation generation..."
        ls -la src/Asynkron.DurableFunctions.AzureAdapter/bin/Release/net8.0/*.xml || echo "No XML files found"
      
    - name: Create NuGet package
      run: dotnet pack src/Asynkron.DurableFunctions.AzureAdapter --configuration Release --no-build --output ./azure-adapter-packages
      
    - name: Validate package contents
      run: |
        echo "Validating NuGet package contents..."
        dotnet tool install -g dotnet-zip || true
        for pkg in azure-adapter-packages/*.nupkg; do
          echo "=== Package: $(basename "$pkg") ==="
          unzip -l "$pkg" | head -20
        done
        
    - name: Upload AzureAdapter packages
      uses: actions/upload-artifact@v4
      with:
        name: azure-adapter-packages
        path: azure-adapter-packages/*.nupkg
        retention-days: 30

  test-azure-adapter-integration:
    runs-on: ubuntu-latest
    needs: build-azure-adapter
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Build entire solution to test integration
      run: |
        dotnet restore
        dotnet build --configuration Release
        
    - name: Test Azure compatibility examples
      run: |
        echo "Testing Azure compatibility examples..."
        cd Examples
        timeout 60s dotnet run azure || true
        echo "Azure compatibility test completed"
        
    - name: Verify AzureAdapter can be referenced
      run: |
        echo "Verifying project references work correctly..."
        cd Examples
        dotnet build --configuration Release --verbosity minimal
        echo "Reference verification completed"